function dijkstra(graph, start) {
  const distances = {};
  const visited = {};
  for (let vertex in graph) {
    distances[vertex] = Infinity;
    visited[vertex] = false;
  }
  distances[start] = 0;
 
  for (let i = 0; i < Object.keys(graph).length - 1; i++) {
    let currentVertex = minDistanceVertex(distances, visited);
    visited[currentVertex] = true;
    for (let neighbor in graph[currentVertex]) {
      let distance = distances[currentVertex] + graph[currentVertex][neighbor];
      if (distance < distances[neighbor]) {
        distances[neighbor] = distance;
      }
    }
  }
 
  return distances;
}
 
function minDistanceVertex(distances, visited) {
  let min = Infinity;
  let minVertex = null;
  for (let vertex in distances) {
    if (distances[vertex] < min && !visited[vertex]) {
      min = distances[vertex];
      minVertex = vertex;
    }
  }
  return minVertex;
}
 
const graph = {
  'A': { 'B': 4, 'C': 2 },
  'B': { 'A': 4, 'C': 5, 'D': 10 },
  'C': { 'A': 2, 'B': 5, 'D': 3 },
  'D': { 'B': 10, 'C': 3 }
};
 
console.log(dijkstra(graph, 'A'));